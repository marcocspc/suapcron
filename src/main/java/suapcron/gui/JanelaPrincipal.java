/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package main.java.suapcron.gui;

import com.toedter.calendar.JCalendar;
import java.awt.Color;
import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.StringSelection;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Calendar;
import java.util.Date;
import java.util.LinkedList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JProgressBar;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import main.java.suapcron.domain.Expediente;
import main.java.suapcron.domain.Hora;
import main.java.suapcron.domain.Servidor;
import main.java.suapcron.domain.Suap;

/**
 *
 * @author marcocspc
 */
public class JanelaPrincipal extends javax.swing.JFrame {

    /**
     * Creates new form JanelaPrincipal
     */
    public JanelaPrincipal() {
        initComponents();
        this.pack();
        this.setLocationRelativeTo(null);

        dialogEscolhedorDeData.setLocationRelativeTo(this);
        dialogLoginSuap.setLocationRelativeTo(this);
        dialogCarregandoInserirObservacoes.setLocationRelativeTo(this);
        ehExpedientePadrao = false;
        icone = new ImageIcon(getClass().getResource("/suapcron/img/icon64.png"));
        suap = new Suap();
        naoContinuarOperacoesNoSuap = true;

        dialogCarregandoInserirObservacoes.pack();
        dialogEscolhedorDeData.pack();
        dialogLoginSuap.pack();

        DefaultTableModel dtm = (DefaultTableModel) tabelaPasso2.getModel();
        dtm.setRowCount(0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dialogEscolhedorDeData = new javax.swing.JDialog();
        calendario = new com.toedter.calendar.JCalendar();
        okJDialog = new javax.swing.JButton();
        labelDataJDialog = new javax.swing.JLabel();
        dialogLoginSuap = new javax.swing.JDialog();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        campoMatricula = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        campoSenha = new javax.swing.JPasswordField();
        btnOKLogin = new javax.swing.JButton();
        btnCancelLogin = new javax.swing.JButton();
        dialogCarregandoInserirObservacoes = new javax.swing.JDialog();
        jLabel12 = new javax.swing.JLabel();
        barraProgressoObs = new javax.swing.JProgressBar();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        passos = new javax.swing.JTabbedPane();
        primeiroPasso = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        listaExpedientePadrao = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        checkBoxDiaCustom = new javax.swing.JCheckBox();
        jLabel8 = new javax.swing.JLabel();
        campoExpedienteCustomizado = new javax.swing.JFormattedTextField();
        segundoPasso = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        campoDiaDevido = new javax.swing.JFormattedTextField();
        mostrarCalendarioDiaDevido = new javax.swing.JButton();
        labelDiaDevido = new javax.swing.JLabel();
        labelExpedientePadrao = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaPasso2 = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        campoDiaAdicionar = new javax.swing.JFormattedTextField();
        jLabel5 = new javax.swing.JLabel();
        campoHoraAdicionar = new javax.swing.JFormattedTextField();
        botaoAdicionar = new javax.swing.JButton();
        botaoSelecaoDataDiaAdicionar = new javax.swing.JButton();
        labelTotalDeHoras = new javax.swing.JLabel();
        botaoVoltar = new javax.swing.JButton();
        botaoLimpar = new javax.swing.JButton();
        botaoOK = new javax.swing.JButton();
        botaoRemover = new javax.swing.JButton();
        terceiroPasso = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        areaTextoDevido = new javax.swing.JTextArea();
        botaoCopiarTextoDevido = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        campoTextoDevido = new javax.swing.JTextField();
        botaoCampoDevido = new javax.swing.JButton();
        botaoFinalizar = new javax.swing.JButton();
        botaoRecomecar = new javax.swing.JButton();
        btnInserirSUAPdiaDevido = new javax.swing.JButton();
        btnInserirSUAPDiasUtilizados = new javax.swing.JButton();

        dialogEscolhedorDeData.setTitle("Escolher Data");
        dialogEscolhedorDeData.setBounds(new java.awt.Rectangle(0, 0, 270, 285));
        dialogEscolhedorDeData.setModal(true);

        calendario.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                calendarioPropertyChange(evt);
            }
        });

        okJDialog.setText("OK");
        okJDialog.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okJDialogActionPerformed(evt);
            }
        });

        labelDataJDialog.setText("Data: ");

        javax.swing.GroupLayout dialogEscolhedorDeDataLayout = new javax.swing.GroupLayout(dialogEscolhedorDeData.getContentPane());
        dialogEscolhedorDeData.getContentPane().setLayout(dialogEscolhedorDeDataLayout);
        dialogEscolhedorDeDataLayout.setHorizontalGroup(
            dialogEscolhedorDeDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dialogEscolhedorDeDataLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(calendario, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dialogEscolhedorDeDataLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelDataJDialog)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(okJDialog, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        dialogEscolhedorDeDataLayout.setVerticalGroup(
            dialogEscolhedorDeDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogEscolhedorDeDataLayout.createSequentialGroup()
                .addComponent(calendario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(dialogEscolhedorDeDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(okJDialog)
                    .addComponent(labelDataJDialog))
                .addGap(0, 0, 0))
        );

        dialogLoginSuap.setTitle("Logar no SUAP");
        dialogLoginSuap.setBounds(new java.awt.Rectangle(0, 0, 307, 200));
        dialogLoginSuap.setMinimumSize(new java.awt.Dimension(307, 200));
        dialogLoginSuap.setModal(true);

        jLabel9.setFont(new java.awt.Font("Orkney", 0, 18)); // NOI18N
        jLabel9.setText("Faça login no SUAP para continuar.");

        jLabel10.setFont(new java.awt.Font("Orkney", 0, 18)); // NOI18N
        jLabel10.setText("Matrícula:");

        campoMatricula.setFont(new java.awt.Font("Orkney", 0, 14)); // NOI18N

        jLabel11.setFont(new java.awt.Font("Orkney", 0, 18)); // NOI18N
        jLabel11.setText("Senha:");

        campoSenha.setFont(new java.awt.Font("Orkney", 0, 14)); // NOI18N
        campoSenha.setText("jPasswordField1");
        campoSenha.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                campoSenhaFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                campoSenhaFocusLost(evt);
            }
        });

        btnOKLogin.setText("OK");
        btnOKLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOKLoginActionPerformed(evt);
            }
        });

        btnCancelLogin.setText("Cancelar");
        btnCancelLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelLoginActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout dialogLoginSuapLayout = new javax.swing.GroupLayout(dialogLoginSuap.getContentPane());
        dialogLoginSuap.getContentPane().setLayout(dialogLoginSuapLayout);
        dialogLoginSuapLayout.setHorizontalGroup(
            dialogLoginSuapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogLoginSuapLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(dialogLoginSuapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dialogLoginSuapLayout.createSequentialGroup()
                        .addComponent(btnOKLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancelLogin))
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel10)
                    .addComponent(campoMatricula)
                    .addComponent(jLabel11)
                    .addComponent(campoSenha))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        dialogLoginSuapLayout.setVerticalGroup(
            dialogLoginSuapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogLoginSuapLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(campoMatricula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(campoSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(dialogLoginSuapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnOKLogin)
                    .addComponent(btnCancelLogin))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        dialogCarregandoInserirObservacoes.setBounds(new java.awt.Rectangle(0, 0, 353, 90));
        dialogCarregandoInserirObservacoes.setMinimumSize(new java.awt.Dimension(353, 90));
        dialogCarregandoInserirObservacoes.pack();

        jLabel12.setFont(new java.awt.Font("Orkney", 0, 18)); // NOI18N
        jLabel12.setText("Aguarde...");

        barraProgressoObs.setIndeterminate(true);

        javax.swing.GroupLayout dialogCarregandoInserirObservacoesLayout = new javax.swing.GroupLayout(dialogCarregandoInserirObservacoes.getContentPane());
        dialogCarregandoInserirObservacoes.getContentPane().setLayout(dialogCarregandoInserirObservacoesLayout);
        dialogCarregandoInserirObservacoesLayout.setHorizontalGroup(
            dialogCarregandoInserirObservacoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogCarregandoInserirObservacoesLayout.createSequentialGroup()
                .addGap(133, 133, 133)
                .addComponent(jLabel12)
                .addContainerGap(138, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, dialogCarregandoInserirObservacoesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(barraProgressoObs, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        dialogCarregandoInserirObservacoesLayout.setVerticalGroup(
            dialogCarregandoInserirObservacoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(dialogCarregandoInserirObservacoesLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(barraProgressoObs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Suapcron");
        setResizable(false);
        setSize(new java.awt.Dimension(720, 530));
        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                formFocusGained(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/suapcron/img/path4188.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        passos.setEnabled(false);

        jLabel1.setFont(new java.awt.Font("Orkney", 0, 24)); // NOI18N
        jLabel1.setText("Primeiramente, selecione seu tipo de Expediente:");

        listaExpedientePadrao.setFont(new java.awt.Font("Orkney", 0, 18)); // NOI18N
        listaExpedientePadrao.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "8 horas", "6 horas" }));

        jButton1.setText("Próximo");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Cancelar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        checkBoxDiaCustom.setFont(new java.awt.Font("Orkney", 0, 14)); // NOI18N
        checkBoxDiaCustom.setText("Não estou devendo um dia inteiro.");
        checkBoxDiaCustom.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                checkBoxDiaCustomStateChanged(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Orkney", 0, 18)); // NOI18N
        jLabel8.setText("Eu já paguei esta quantidade de horas:");

        try {
            campoExpedienteCustomizado.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        campoExpedienteCustomizado.setEnabled(false);
        campoExpedienteCustomizado.setFont(new java.awt.Font("Orkney", 0, 18)); // NOI18N

        javax.swing.GroupLayout primeiroPassoLayout = new javax.swing.GroupLayout(primeiroPasso);
        primeiroPasso.setLayout(primeiroPassoLayout);
        primeiroPassoLayout.setHorizontalGroup(
            primeiroPassoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, primeiroPassoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1)
                .addContainerGap())
            .addGroup(primeiroPassoLayout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addGroup(primeiroPassoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(primeiroPassoLayout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(campoExpedienteCustomizado))
                    .addComponent(checkBoxDiaCustom)
                    .addGroup(primeiroPassoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(listaExpedientePadrao, javax.swing.GroupLayout.PREFERRED_SIZE, 541, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1)))
                .addContainerGap(92, Short.MAX_VALUE))
        );
        primeiroPassoLayout.setVerticalGroup(
            primeiroPassoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(primeiroPassoLayout.createSequentialGroup()
                .addGap(99, 99, 99)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(listaExpedientePadrao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkBoxDiaCustom)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(primeiroPassoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(campoExpedienteCustomizado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 86, Short.MAX_VALUE)
                .addGroup(primeiroPassoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap())
        );

        passos.addTab("Primeiro passo", primeiroPasso);

        jLabel3.setFont(new java.awt.Font("Orkney", 0, 18)); // NOI18N
        jLabel3.setText("Informe o dia que está devendo:");

        try {
            campoDiaDevido.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        campoDiaDevido.setFont(new java.awt.Font("Orkney", 0, 18)); // NOI18N
        campoDiaDevido.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                campoDiaDevidoFocusGained(evt);
            }
        });

        mostrarCalendarioDiaDevido.setText("...");
        mostrarCalendarioDiaDevido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mostrarCalendarioDiaDevidoActionPerformed(evt);
            }
        });

        labelDiaDevido.setFont(new java.awt.Font("Orkney", 0, 18)); // NOI18N
        labelDiaDevido.setText("Dia devido:");

        labelExpedientePadrao.setFont(new java.awt.Font("Orkney", 0, 18)); // NOI18N
        labelExpedientePadrao.setText("Expediente:");

        tabelaPasso2.setFont(new java.awt.Font("Orkney", 0, 14)); // NOI18N
        tabelaPasso2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Data", "Horas Trabalhadas"
            }
        ));
        tabelaPasso2.setEnabled(false);
        tabelaPasso2.setFocusable(false);
        jScrollPane1.setViewportView(tabelaPasso2);

        jLabel4.setFont(new java.awt.Font("Orkney", 0, 18)); // NOI18N
        jLabel4.setText("Dia:");

        try {
            campoDiaAdicionar.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        campoDiaAdicionar.setEnabled(false);
        campoDiaAdicionar.setFont(new java.awt.Font("Orkney", 0, 18)); // NOI18N
        campoDiaAdicionar.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                campoDiaAdicionarFocusGained(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Orkney", 0, 18)); // NOI18N
        jLabel5.setText("Horas Trabalhadas no Dia:");

        try {
            campoHoraAdicionar.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        campoHoraAdicionar.setEnabled(false);
        campoHoraAdicionar.setFont(new java.awt.Font("Orkney", 0, 18)); // NOI18N
        campoHoraAdicionar.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                campoHoraAdicionarFocusGained(evt);
            }
        });
        campoHoraAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                campoHoraAdicionarActionPerformed(evt);
            }
        });

        botaoAdicionar.setFont(new java.awt.Font("Orkney", 0, 14)); // NOI18N
        botaoAdicionar.setText("Adicionar");
        botaoAdicionar.setEnabled(false);
        botaoAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoAdicionarActionPerformed(evt);
            }
        });

        botaoSelecaoDataDiaAdicionar.setText("...");
        botaoSelecaoDataDiaAdicionar.setEnabled(false);
        botaoSelecaoDataDiaAdicionar.setFocusable(false);
        botaoSelecaoDataDiaAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoSelecaoDataDiaAdicionarActionPerformed(evt);
            }
        });

        labelTotalDeHoras.setFont(new java.awt.Font("Orkney", 0, 24)); // NOI18N
        labelTotalDeHoras.setForeground(new java.awt.Color(204, 0, 0));
        labelTotalDeHoras.setText("Total:");

        botaoVoltar.setFont(new java.awt.Font("Orkney", 0, 14)); // NOI18N
        botaoVoltar.setText("Voltar");
        botaoVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoVoltarActionPerformed(evt);
            }
        });

        botaoLimpar.setFont(new java.awt.Font("Orkney", 0, 14)); // NOI18N
        botaoLimpar.setText("Limpar");
        botaoLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoLimparActionPerformed(evt);
            }
        });

        botaoOK.setFont(new java.awt.Font("Orkney", 0, 14)); // NOI18N
        botaoOK.setText("OK");
        botaoOK.setEnabled(false);
        botaoOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoOKActionPerformed(evt);
            }
        });

        botaoRemover.setFont(new java.awt.Font("Orkney", 0, 14)); // NOI18N
        botaoRemover.setText("Remover");
        botaoRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoRemoverActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout segundoPassoLayout = new javax.swing.GroupLayout(segundoPasso);
        segundoPasso.setLayout(segundoPassoLayout);
        segundoPassoLayout.setHorizontalGroup(
            segundoPassoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(segundoPassoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(segundoPassoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelDiaDevido)
                    .addGroup(segundoPassoLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(campoDiaDevido, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(segundoPassoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelExpedientePadrao)
                    .addComponent(mostrarCalendarioDiaDevido, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(segundoPassoLayout.createSequentialGroup()
                .addGroup(segundoPassoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(segundoPassoLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(campoDiaAdicionar, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE))
                    .addComponent(labelTotalDeHoras))
                .addGroup(segundoPassoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(segundoPassoLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(botaoSelecaoDataDiaAdicionar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(campoHoraAdicionar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(botaoAdicionar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(segundoPassoLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(botaoVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(botaoRemover, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(botaoLimpar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(botaoOK, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        segundoPassoLayout.setVerticalGroup(
            segundoPassoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(segundoPassoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(segundoPassoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(campoDiaDevido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(mostrarCalendarioDiaDevido))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(segundoPassoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelDiaDevido)
                    .addComponent(labelExpedientePadrao))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(segundoPassoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(campoDiaAdicionar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(campoHoraAdicionar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botaoAdicionar)
                    .addComponent(botaoSelecaoDataDiaAdicionar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(segundoPassoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(segundoPassoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(botaoVoltar)
                        .addComponent(botaoLimpar)
                        .addComponent(botaoRemover)
                        .addComponent(botaoOK))
                    .addComponent(labelTotalDeHoras))
                .addGap(0, 0, 0))
        );

        passos.addTab("Segundo passo", segundoPasso);

        jLabel6.setFont(new java.awt.Font("Orkney", 0, 18)); // NOI18N
        jLabel6.setText("Texto para colar no dia devido:");

        areaTextoDevido.setEditable(false);
        areaTextoDevido.setColumns(20);
        areaTextoDevido.setFont(new java.awt.Font("Orkney", 0, 18)); // NOI18N
        areaTextoDevido.setRows(5);
        jScrollPane2.setViewportView(areaTextoDevido);

        botaoCopiarTextoDevido.setFont(new java.awt.Font("Orkney", 0, 14)); // NOI18N
        botaoCopiarTextoDevido.setText("Copiar");
        botaoCopiarTextoDevido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoCopiarTextoDevidoActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Orkney", 0, 18)); // NOI18N
        jLabel7.setText("Texto para colar nos dias utilizados para pagamento:");

        campoTextoDevido.setEditable(false);
        campoTextoDevido.setFont(new java.awt.Font("Orkney", 0, 18)); // NOI18N

        botaoCampoDevido.setFont(new java.awt.Font("Orkney", 0, 14)); // NOI18N
        botaoCampoDevido.setText("Copiar");
        botaoCampoDevido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoCampoDevidoActionPerformed(evt);
            }
        });

        botaoFinalizar.setFont(new java.awt.Font("Orkney", 0, 14)); // NOI18N
        botaoFinalizar.setText("Finalizar");
        botaoFinalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoFinalizarActionPerformed(evt);
            }
        });

        botaoRecomecar.setFont(new java.awt.Font("Orkney", 0, 14)); // NOI18N
        botaoRecomecar.setText("Recomeçar");
        botaoRecomecar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoRecomecarActionPerformed(evt);
            }
        });

        btnInserirSUAPdiaDevido.setText("Inserir no SUAP");
        btnInserirSUAPdiaDevido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInserirSUAPdiaDevidoActionPerformed(evt);
            }
        });

        btnInserirSUAPDiasUtilizados.setText("Inserir no SUAP");
        btnInserirSUAPDiasUtilizados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInserirSUAPDiasUtilizadosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout terceiroPassoLayout = new javax.swing.GroupLayout(terceiroPasso);
        terceiroPasso.setLayout(terceiroPassoLayout);
        terceiroPassoLayout.setHorizontalGroup(
            terceiroPassoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, terceiroPassoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(terceiroPassoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(campoTextoDevido)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, terceiroPassoLayout.createSequentialGroup()
                        .addGroup(terceiroPassoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7))
                        .addGap(0, 242, Short.MAX_VALUE))
                    .addGroup(terceiroPassoLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(terceiroPassoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(botaoRecomecar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnInserirSUAPdiaDevido, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnInserirSUAPDiasUtilizados, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(terceiroPassoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(botaoCopiarTextoDevido, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                            .addComponent(botaoCampoDevido, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(botaoFinalizar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        terceiroPassoLayout.setVerticalGroup(
            terceiroPassoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(terceiroPassoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(terceiroPassoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botaoCopiarTextoDevido)
                    .addComponent(btnInserirSUAPdiaDevido))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(campoTextoDevido, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(terceiroPassoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botaoCampoDevido)
                    .addComponent(btnInserirSUAPDiasUtilizados))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(terceiroPassoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botaoFinalizar)
                    .addComponent(botaoRecomecar))
                .addContainerGap())
        );

        passos.addTab("Terceiro passo", terceiroPasso);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(passos)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(passos))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (checkBoxDiaCustom.isSelected()) {
            int hora = Integer.parseInt(campoExpedienteCustomizado.getText().substring(0, 2));
            int minuto = Integer.parseInt(campoExpedienteCustomizado.getText().substring(3, 5));
            int segundo = Integer.parseInt(campoExpedienteCustomizado.getText().substring(6));

            expedienteTotal = new Expediente(new Date(), new Hora(hora, minuto, segundo));
        } else {
            expedienteTotal = new Expediente(new Date(), new Hora(0, 0, 0));

        }

        expedienteDevido = new Expediente(new Date(), new Hora(0, 0, 0));

        DefaultComboBoxModel dcbm = (DefaultComboBoxModel) listaExpedientePadrao.getModel();
        String escolhido = dcbm.getSelectedItem().toString();
        if (escolhido.contains("8")) {
            expedientePadrao = new Expediente(new Date(), new Hora(8, 0, 0));
        } else {
            expedientePadrao = new Expediente(new Date(), new Hora(6, 0, 0));
        }

        expedientesUsados = new ArrayList<Expediente>();

        comboBreaker = false;
        controlePasso2 = new Thread(new threadDeVerificacaoPasso2());
        controlePasso2.start();

        passos.setSelectedIndex(1);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void mostrarCalendarioDiaDevidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mostrarCalendarioDiaDevidoActionPerformed
        Calendar c = this.calendario.getCalendar();
        c.setTime(new Date());
        dialogEscolhedorDeData.setVisible(true);
        ehExpedientePadrao = true;
    }//GEN-LAST:event_mostrarCalendarioDiaDevidoActionPerformed

    private void okJDialogActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okJDialogActionPerformed
        labelDataJDialog.setText("Data: ");
        dialogEscolhedorDeData.setVisible(false);
    }//GEN-LAST:event_okJDialogActionPerformed

    private void calendarioPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_calendarioPropertyChange
        Calendar c = this.calendario.getCalendar();
        labelDataJDialog.setText("Data: " + String.format("%02d", c.get(Calendar.DAY_OF_MONTH)) + "/" + String.format("%02d", c.get(Calendar.MONTH)) + "/" + String.format("%04d", c.get(Calendar.YEAR)));
    }//GEN-LAST:event_calendarioPropertyChange

    private void botaoLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoLimparActionPerformed
        limparCamposPasso2();
        expedienteTotal = new Expediente(new Date(), new Hora(0, 0, 0));
        expedientesUsados.clear();
    }//GEN-LAST:event_botaoLimparActionPerformed

    private void botaoSelecaoDataDiaAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoSelecaoDataDiaAdicionarActionPerformed
        Calendar c = this.calendario.getCalendar();
        c.setTime(new Date());
        dialogEscolhedorDeData.setVisible(true);
        ehAdicaoDeExpediente = true;
    }//GEN-LAST:event_botaoSelecaoDataDiaAdicionarActionPerformed

    private void botaoVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoVoltarActionPerformed
        limparCamposPasso2();
        comboBreaker = true;
        passos.setSelectedIndex(0);
    }//GEN-LAST:event_botaoVoltarActionPerformed

    private void botaoRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoRemoverActionPerformed
        if (tabelaPasso2.getSelectedRow() >= 0) {
            Expediente e = (Expediente) expedientesUsados.get(tabelaPasso2.getSelectedRow());
            e.getHorasTrabalhadas().menos(expedientePadrao.getHorasTrabalhadas());
            expedienteTotal.getHorasTrabalhadas().menos(e.getHorasTrabalhadas());
            expedientesUsados.remove(tabelaPasso2.getSelectedRow());
            DefaultTableModel dtm = (DefaultTableModel) tabelaPasso2.getModel();
            dtm.removeRow(tabelaPasso2.getSelectedRow());
        }
    }//GEN-LAST:event_botaoRemoverActionPerformed

    private void botaoAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoAdicionarActionPerformed
        adicionarDiaNaTabela();
    }//GEN-LAST:event_botaoAdicionarActionPerformed

    private void botaoOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoOKActionPerformed
        limparCamposPasso2();

        comboBreaker = true;

        areaTextoDevido.setText(gerarTextoPagamento());
        campoTextoDevido.setText(gerarTextoParaDiaUsado());

        passos.setSelectedIndex(2);
    }//GEN-LAST:event_botaoOKActionPerformed

    private void botaoRecomecarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoRecomecarActionPerformed
        limparCamposPasso1();
        limparCamposPasso2();
        limparCamposPasso3();
        passos.setSelectedIndex(0);
    }//GEN-LAST:event_botaoRecomecarActionPerformed

    private void botaoFinalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoFinalizarActionPerformed
        System.exit(0);
    }//GEN-LAST:event_botaoFinalizarActionPerformed

    private void botaoCopiarTextoDevidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoCopiarTextoDevidoActionPerformed
        copiarAreaTextoDevidoParaAreaDeTransferencia();
    }//GEN-LAST:event_botaoCopiarTextoDevidoActionPerformed

    private void botaoCampoDevidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoCampoDevidoActionPerformed
        copiarCampoTextoDevidoParaAreaDeTransferencia();
    }//GEN-LAST:event_botaoCampoDevidoActionPerformed

    private void campoHoraAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_campoHoraAdicionarActionPerformed
        adicionarDiaNaTabela();
    }//GEN-LAST:event_campoHoraAdicionarActionPerformed

    private void campoDiaDevidoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoDiaDevidoFocusGained
        campoDiaDevido.selectAll();
    }//GEN-LAST:event_campoDiaDevidoFocusGained

    private void campoDiaAdicionarFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoDiaAdicionarFocusGained
        campoDiaAdicionar.selectAll();
    }//GEN-LAST:event_campoDiaAdicionarFocusGained

    private void campoHoraAdicionarFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoHoraAdicionarFocusGained
        campoHoraAdicionar.selectAll();
    }//GEN-LAST:event_campoHoraAdicionarFocusGained

    private void checkBoxDiaCustomStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_checkBoxDiaCustomStateChanged
        if (checkBoxDiaCustom.isSelected()) {
            campoExpedienteCustomizado.setEnabled(true);
        } else {
            campoExpedienteCustomizado.setEnabled(false);
            campoExpedienteCustomizado.setText("");
        }
    }//GEN-LAST:event_checkBoxDiaCustomStateChanged

    private void btnInserirSUAPdiaDevidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInserirSUAPdiaDevidoActionPerformed
        passos.setEnabled(false);
        dialogCarregandoInserirObservacoes.setVisible(true);

        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                if (suap.getServidor() == null) {

                    dialogLoginSuap.setVisible(true);

                    if (!naoContinuarOperacoesNoSuap) {
                        Servidor s = new Servidor(campoMatricula.getText(), String.valueOf(campoSenha.getPassword()));
                        suap.setServidor(s);

                        try {
                            if (!suap.verificarCredenciais()) {
                                dialogCarregandoInserirObservacoes.setVisible(false);
                                JOptionPane.showMessageDialog(rootPane, "Credenciais inválidas.", "Atenção", JOptionPane.DEFAULT_OPTION, icone);
                                naoContinuarOperacoesNoSuap = true;
                                suap.setServidor(null);
                            }
                        } catch (Exception ex) {
                            JOptionPane.showMessageDialog(rootPane, ex.getMessage());
                        }
                    }

                }

                if (suap.getServidor() != null && !naoContinuarOperacoesNoSuap) {
                    naoContinuarOperacoesNoSuap = false;

                    inserirObservacaoNoDiaDevido();
                }
                dialogCarregandoInserirObservacoes.setVisible(false);
                passos.setEnabled(true);
            }
        });

    }//GEN-LAST:event_btnInserirSUAPdiaDevidoActionPerformed

    private void campoSenhaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoSenhaFocusGained
        campoSenha.selectAll();
    }//GEN-LAST:event_campoSenhaFocusGained

    private void campoSenhaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoSenhaFocusLost
        campoSenha.select(0, 0);
    }//GEN-LAST:event_campoSenhaFocusLost

    private void btnOKLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOKLoginActionPerformed
        naoContinuarOperacoesNoSuap = false;
        dialogLoginSuap.setVisible(false);
    }//GEN-LAST:event_btnOKLoginActionPerformed

    private void btnCancelLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelLoginActionPerformed
        naoContinuarOperacoesNoSuap = true;
        dialogLoginSuap.setVisible(false);
    }//GEN-LAST:event_btnCancelLoginActionPerformed

    private void formFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusGained
        if (dialogCarregandoInserirObservacoes.isVisible()) {
            dialogCarregandoInserirObservacoes.requestFocus();
        }
    }//GEN-LAST:event_formFocusGained

    private void btnInserirSUAPDiasUtilizadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInserirSUAPDiasUtilizadosActionPerformed
        passos.setEnabled(false);
        dialogCarregandoInserirObservacoes.setVisible(true);

        SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                if (suap.getServidor() == null) {

                    dialogLoginSuap.setVisible(true);

                    if (!naoContinuarOperacoesNoSuap) {
                        Servidor s = new Servidor(campoMatricula.getText(), String.valueOf(campoSenha.getPassword()));
                        suap.setServidor(s);

                        try {
                            if (!suap.verificarCredenciais()) {
                                dialogCarregandoInserirObservacoes.setVisible(false);
                                JOptionPane.showMessageDialog(rootPane, "Credenciais inválidas.", "Atenção", JOptionPane.DEFAULT_OPTION, icone);
                                naoContinuarOperacoesNoSuap = true;
                                suap.setServidor(null);
                            }
                        } catch (Exception ex) {
                            JOptionPane.showMessageDialog(rootPane, ex.getMessage());
                        }
                    }

                }

                if (suap.getServidor() != null && !naoContinuarOperacoesNoSuap) {
                    naoContinuarOperacoesNoSuap = false;

                    inserirObservacaoNosDiasUtilizados();
                }

                dialogCarregandoInserirObservacoes.setVisible(false);
                passos.setEnabled(true);
            }
        });

    }//GEN-LAST:event_btnInserirSUAPDiasUtilizadosActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JanelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JanelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JanelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JanelaPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JanelaPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea areaTextoDevido;
    private javax.swing.JProgressBar barraProgressoObs;
    private javax.swing.JButton botaoAdicionar;
    private javax.swing.JButton botaoCampoDevido;
    private javax.swing.JButton botaoCopiarTextoDevido;
    private javax.swing.JButton botaoFinalizar;
    private javax.swing.JButton botaoLimpar;
    private javax.swing.JButton botaoOK;
    private javax.swing.JButton botaoRecomecar;
    private javax.swing.JButton botaoRemover;
    private javax.swing.JButton botaoSelecaoDataDiaAdicionar;
    private javax.swing.JButton botaoVoltar;
    private javax.swing.JButton btnCancelLogin;
    private javax.swing.JButton btnInserirSUAPDiasUtilizados;
    private javax.swing.JButton btnInserirSUAPdiaDevido;
    private javax.swing.JButton btnOKLogin;
    private com.toedter.calendar.JCalendar calendario;
    private javax.swing.JFormattedTextField campoDiaAdicionar;
    private javax.swing.JFormattedTextField campoDiaDevido;
    private javax.swing.JFormattedTextField campoExpedienteCustomizado;
    private javax.swing.JFormattedTextField campoHoraAdicionar;
    private javax.swing.JTextField campoMatricula;
    private javax.swing.JPasswordField campoSenha;
    private javax.swing.JTextField campoTextoDevido;
    private javax.swing.JCheckBox checkBoxDiaCustom;
    private javax.swing.JDialog dialogCarregandoInserirObservacoes;
    private javax.swing.JDialog dialogEscolhedorDeData;
    private javax.swing.JDialog dialogLoginSuap;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel labelDataJDialog;
    private javax.swing.JLabel labelDiaDevido;
    private javax.swing.JLabel labelExpedientePadrao;
    private javax.swing.JLabel labelTotalDeHoras;
    private javax.swing.JComboBox<String> listaExpedientePadrao;
    private javax.swing.JButton mostrarCalendarioDiaDevido;
    private javax.swing.JButton okJDialog;
    private javax.swing.JTabbedPane passos;
    private javax.swing.JPanel primeiroPasso;
    private javax.swing.JPanel segundoPasso;
    private javax.swing.JTable tabelaPasso2;
    private javax.swing.JPanel terceiroPasso;
    // End of variables declaration//GEN-END:variables

    private Expediente expedientePadrao;
    private Expediente expedienteTotal;
    private Expediente expedienteDevido;
    private ArrayList<Expediente> expedientesUsados;
    private boolean ehExpedientePadrao;
    private boolean ehAdicaoDeExpediente;
    private boolean comboBreaker;
    private Thread controlePasso2;
    private ImageIcon icone;
    private Suap suap;
    private boolean naoContinuarOperacoesNoSuap;

    //gets e sets
    public JProgressBar getBarraProgressoObs() {
        return barraProgressoObs;
    }

    //fim dos gets e sets
    private void limparCamposPasso1() {
        listaExpedientePadrao.setSelectedIndex(0);
        checkBoxDiaCustom.setSelected(false);
    }

    private void limparCamposPasso2() {
        botaoOK.setEnabled(false);
        labelTotalDeHoras.setText("Total:");
        botaoAdicionar.setEnabled(false);
        campoHoraAdicionar.setText("");
        campoHoraAdicionar.setEnabled(false);
        botaoSelecaoDataDiaAdicionar.setEnabled(false);
        campoDiaAdicionar.setText("");
        campoDiaAdicionar.setEnabled(false);
        campoDiaDevido.setText("");

        DefaultTableModel modelo = (DefaultTableModel) tabelaPasso2.getModel();
        modelo.setRowCount(0);

        tabelaPasso2.setEnabled(false);
    }

    private void limparCamposPasso3() {
        areaTextoDevido.setText("");
        campoTextoDevido.setText("");
    }

    private void limparLoginSuap() {
        campoMatricula.setText("");
        campoSenha.setText("***************");
    }

    private void habilitarCamposPasso2() {
        //labelTotalDeHoras.setText("Total:");
        botaoAdicionar.setEnabled(true);
        //campoHoraAdicionar.setText("");
        campoHoraAdicionar.setEnabled(true);
        botaoSelecaoDataDiaAdicionar.setEnabled(true);
        //campoDiaAdicionar.setText("");
        campoDiaAdicionar.setEnabled(true);
        //labelExpedientePadrao.setText("Dia devido:");

        //DefaultTableModel modelo = (DefaultTableModel) tabelaPasso2.getModel();
        //modelo.setRowCount(0);
        tabelaPasso2.setEnabled(true);
    }

    private void desabilitarCamposPasso2() {
        botaoAdicionar.setEnabled(false);
        campoHoraAdicionar.setEnabled(false);
        botaoSelecaoDataDiaAdicionar.setEnabled(false);
        campoDiaAdicionar.setEnabled(false);
        tabelaPasso2.setEnabled(false);
    }

    private void copiarAreaTextoDevidoParaAreaDeTransferencia() {
        areaTextoDevido.selectAll();
        copiarParaAreaDeTransferencia(areaTextoDevido.getText());
        JOptionPane.showMessageDialog(this, "Texto copiado com sucesso.", "Mensagem", JOptionPane.INFORMATION_MESSAGE, icone);
    }

    private void copiarCampoTextoDevidoParaAreaDeTransferencia() {
        campoTextoDevido.selectAll();
        copiarParaAreaDeTransferencia(campoTextoDevido.getText());
        JOptionPane.showMessageDialog(this, "Texto copiado com sucesso.", "Mensagem", JOptionPane.INFORMATION_MESSAGE, icone);
    }

    private void copiarParaAreaDeTransferencia(String texto) {
        StringSelection selection = new StringSelection(texto);
        Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard();
        clipboard.setContents(selection, selection);
    }

    private String gerarTextoPagamento() {
        SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");

        String res = "Dia pago com:\n";

        Hora total = new Hora(0, 0, 0);

        for (int x = 0; x < expedientesUsados.size(); x++) {
            Expediente e = (Expediente) expedientesUsados.get(x);

            String linha = "Dia: " + dateFormat.format(e.getDia()) + " ";

            Hora h = e.getHorasTrabalhadas();
            h.menos(expedientePadrao.getHorasTrabalhadas());
            total.mais(h);

            linha += h.toString() + " extras;\n";

            res += linha;
        }

        res += "Total: " + total + " extras.";

        return res;
    }

    private String gerarTextoParaDiaUsado() {
        SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");

        return "Dia usado para pagamento do dia " + dateFormat.format(expedienteDevido.getDia()) + ".";
    }

    private boolean camposPasso2EstaoHabilitados() {
        return tabelaPasso2.isEnabled() && campoDiaAdicionar.isEnabled() && campoHoraAdicionar.isEnabled();
    }

    private void adicionarDiaNaTabela() {
        if (!campoHoraAdicionar.getText().equals("  :  :  ") && !campoDiaAdicionar.getText().equals("  /  /    ")) {
            SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
            try {
                Date d = dateFormat.parse(campoDiaAdicionar.getText());

                int hora = Integer.parseInt(campoHoraAdicionar.getText().substring(0, 2));
                int minuto = Integer.parseInt(campoHoraAdicionar.getText().substring(3, 5));
                int segundo = Integer.parseInt(campoHoraAdicionar.getText().substring(6));
                Hora h = new Hora(hora, minuto, segundo);

                if (h.compareTo(expedientePadrao.getHorasTrabalhadas()) > 0) {

                    Expediente e = new Expediente(d, h);

                    expedientesUsados.add(e);

                    h = new Hora(h.getHoras(), h.getMinutos(), h.getSegundos());
                    h.menos(expedientePadrao.getHorasTrabalhadas());

                    expedienteTotal.getHorasTrabalhadas().mais(h);

                    DefaultTableModel dtm = (DefaultTableModel) tabelaPasso2.getModel();
                    dtm.addRow(new String[]{campoDiaAdicionar.getText(), campoHoraAdicionar.getText()});

                    campoDiaAdicionar.setText(null);
                    campoHoraAdicionar.setText(null);
                    campoDiaAdicionar.requestFocus();
                } else {
                    JOptionPane.showMessageDialog(this, "Expediente insuficiente para pagamento de horas.", "Erro", JOptionPane.INFORMATION_MESSAGE);
                }
            } catch (ParseException ex) {
                JOptionPane.showMessageDialog(this, "Erro!\n"
                        + ex.getMessage(), "Erro", JOptionPane.INFORMATION_MESSAGE, icone);
            }

        }
    }

    private class threadDeVerificacaoPasso2 implements Runnable {

        @Override
        public void run() {
            while (!comboBreaker) {
                if (!dialogEscolhedorDeData.isFocused()) {
                    if (ehExpedientePadrao) {

                        JCalendar j = calendario;
                        Calendar c = j.getCalendar();

                        expedienteDevido.setDia(c.getTime());
                        campoDiaDevido.setText(String.format("%02d", c.get(Calendar.DAY_OF_MONTH)) + "/" + String.format("%02d", c.get(Calendar.MONTH) + 1) + "/" + String.format("%04d", c.get(Calendar.YEAR)));
                        labelDiaDevido.setText("Dia devido: " + String.format("%02d", c.get(Calendar.DAY_OF_MONTH)) + "/" + String.format("%02d", c.get(Calendar.MONTH) + 1) + "/" + String.format("%04d", c.get(Calendar.YEAR)));
                        expedientePadrao.setDia(c.getTime());

                        ehExpedientePadrao = false;
                    }

                    if (ehAdicaoDeExpediente) {

                        JCalendar j = calendario;
                        Calendar c = j.getCalendar();

                        campoDiaAdicionar.setText(String.format("%02d", c.get(Calendar.DAY_OF_MONTH)) + "/" + String.format("%02d", c.get(Calendar.MONTH) + 1) + "/" + String.format("%04d", c.get(Calendar.YEAR)));
                        expedientePadrao.setDia(c.getTime());

                        ehAdicaoDeExpediente = false;
                    }

                    labelExpedientePadrao.setText("Expediente: " + String.format("%02d", expedientePadrao.getHorasTrabalhadas().getHoras()) + " horas");

                    labelTotalDeHoras.setText("Total: " + expedienteTotal.getHorasTrabalhadas());

                    if (expedienteTotal.getHorasTrabalhadas().compareTo(expedientePadrao.getHorasTrabalhadas()) >= 0) {
                        labelTotalDeHoras.setForeground(new Color(0, 102, 0));
                        botaoOK.setEnabled(true);
                    } else {
                        labelTotalDeHoras.setForeground(new Color(204, 0, 0));
                        botaoOK.setEnabled(false);
                    }

                    //substituiu botao aplicar
                    if (campoDiaDevido.isEditValid() && !campoDiaDevido.getText().equals("  /  /    ") && !campoDiaDevido.getText().contains(" ") && !campoDiaDevido.getText().isEmpty()) {
                        SimpleDateFormat dateFormat = new SimpleDateFormat("dd/MM/yyyy");
                        try {
                            Date d = dateFormat.parse(campoDiaDevido.getText());
                            expedienteDevido.setDia(d);
                            labelDiaDevido.setText("Dia devido: " + dateFormat.format(expedienteDevido.getDia()));
                            if (!camposPasso2EstaoHabilitados()) {
                                habilitarCamposPasso2();
                            }
                        } catch (ParseException ex) {
                            System.err.println("Erro!\n"
                                    + ex.getMessage());
                        }
                    } else {
                        desabilitarCamposPasso2();
                    }
                }
            }
        }

    }

    private void inserirObservacaoNoDiaDevido() {
        Expediente e = expedienteDevido;

        e.setObservacao(areaTextoDevido.getText());

        try {
            if (e.getObservacao().length() > 190) {
                //inserir multiplas observacoes, cada uma com uma parte do texto
                LinkedList<String> linhasDaObservacao = new LinkedList(Arrays.asList(e.getObservacao().split("\n")));
                LinkedList<Expediente> lista = new LinkedList<Expediente>();

                int tamanhoTotal = 0;
                String observacaoAtual = "";

                while (!linhasDaObservacao.isEmpty()) {
                    for (String linhaAtual : linhasDaObservacao) {
                        if (observacaoAtual.length() + linhaAtual.length() <= 190) {
                            observacaoAtual += linhaAtual;
                            linhasDaObservacao.remove(linhaAtual);
                        } else {
                            break;
                        }
                    }

                    Expediente eAux = new Expediente();
                    eAux.setDia(e.getDia());
                    eAux.setHorasTrabalhadas(e.getHorasTrabalhadas());
                    eAux.setObservacao(observacaoAtual);
                    lista.add(eAux);
                    observacaoAtual = "";
                }

                for (Expediente eAux : lista) {
                    System.out.println("inserindo observacao");
                    suap.inserirObservacao(e);
                    System.out.println("observacao inserida");
                }
            } else {
                //inserir apenas uma observacao
                System.out.println("inserindo observacao");
                suap.inserirObservacao(e);

                System.out.println("observacao inserida");
            }

            JOptionPane.showMessageDialog(rootPane, "Observação inserida com sucesso.", "Atenção", JOptionPane.DEFAULT_OPTION, icone);

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(JanelaPrincipal.this, ex.getMessage());
        }
    }

    private void inserirObservacaoNosDiasUtilizados() {
        //Quando chegar aqui, a janela com a barra de carregamento já estará sendo exibida
        for (Expediente e : expedientesUsados) {

            e.setObservacao(campoTextoDevido.getText());

            try {
                System.out.println("inserindo observacao: " + (expedientesUsados.indexOf(e) + 1) + "/" + expedientesUsados.size());
                suap.inserirObservacao(e);
                System.out.println("observacao inserida " + (expedientesUsados.indexOf(e) + 1) + "/" + expedientesUsados.size());

            } catch (Exception ex) {
                JOptionPane.showMessageDialog(JanelaPrincipal.this, ex.getMessage());
                break;
            }
        }

        JOptionPane.showMessageDialog(rootPane, "Operação concluída.", "Atenção", JOptionPane.DEFAULT_OPTION, icone);
    }
}
